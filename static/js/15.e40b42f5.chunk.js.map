{"version":3,"sources":["pages/CID/createCID/CreateCID.jsx"],"names":["createCID","handleSubmit","_callee","_this$props","name","description","symptoms","causes","interventions","reference","_home_joziel_Documents_Projetos_AEE_aee_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","_this","props","save","selectedItem","sent","history","push","stop","this","_this2","_this$props2","changeValue","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_components_CID_CID__WEBPACK_IMPORTED_MODULE_11__","title","submit","back","goBack","Component","reducer","connect","state","force","get","inputValue","suggestions","dispatch","bindActionCreators","changeValueTEXT","saveCID"],"mappings":"gOAMMA,6MACJC,kCAAe,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAZ,EAC2Da,EAAKC,MAAtEb,EADMD,EACNC,KAAMC,EADAF,EACAE,YAAaC,EADbH,EACaG,SAAUC,EADvBJ,EACuBI,OAAQC,EAD/BL,EAC+BK,cAAeC,EAD9CN,EAC8CM,UAD9CI,EAAAE,KAAA,EAEUC,EAAKC,MAAMC,KAAKd,EAAMC,EAAaC,EAASa,aAAcZ,EAAOY,aAAcX,EAAeC,GAFxG,OAAAI,EAAAO,MAIXJ,EAAKC,MAAMI,QAAQC,KAAK,aAAc,CAAClB,KAAK,SAJjC,wBAAAS,EAAAU,SAAArB,EAAAsB,iFAON,IAAAC,EAAAD,KAAAE,EACgFF,KAAKP,MAApFb,EADDsB,EACCtB,KAAMC,EADPqB,EACOrB,YAAaC,EADpBoB,EACoBpB,SAAUC,EAD9BmB,EAC8BnB,OAAQC,EADtCkB,EACsClB,cAAeC,EADrDiB,EACqDjB,UAAWkB,EADhED,EACgEC,YACvE,OACEC,EAAAjB,EAAAkB,cAACC,EAAA,EAAD,CACIC,MAAO,YACP3B,KAAMA,EACNC,YAAaA,EACbC,SAAUA,EACVC,OAAQA,EACRC,cAAeA,EACfC,UAAWA,EACXkB,YAAaA,EACbK,OAAQR,KAAKvB,aACbgC,KAAM,kBAAMR,EAAKR,MAAMI,QAAQa,mBArBjBC,aA2BlBC,EAAU,YAwBDC,sBAvBS,SAAAC,GAAK,MAAK,CAChCC,MAAOD,EACPlC,KAAOkC,EAAMF,GAASI,IAAI,QAC1BnC,YAAciC,EAAMF,GAASI,IAAI,eACjClC,SAAW,CACTa,aAAemB,EAAMF,GAASI,IAAI,wBAClCC,WAAaH,EAAMF,GAASI,IAAI,sBAChCE,YAAcJ,EAAMF,GAASI,IAAI,wBAEnCjC,OAAS,CACPY,aAAemB,EAAMF,GAASI,IAAI,sBAClCC,WAAaH,EAAMF,GAASI,IAAI,oBAChCE,YAAcJ,EAAMF,GAASI,IAAI,sBAEnChC,cAAgB8B,EAAMF,GAASI,IAAI,iBACnC/B,UAAY6B,EAAMF,GAASI,IAAI,eAGN,SAAAG,GAAQ,MAAK,CACtChB,YAAciB,YAAmBC,IAAiBF,GAClDzB,KAAO0B,YAAmBE,IAASH,KAGtBN,CAA8CrC","file":"static/js/15.e40b42f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { changeValueTEXT, saveCID } from '../../../store/actions/cidCreate';\nimport FormCID from '../../../components/CID/CID';\n\nclass createCID extends Component {  \n  handleSubmit = async () => {\n    const {name, description, symptoms, causes, interventions, reference} = this.props;\n    const response = await this.props.save(name, description, symptoms.selectedItem, causes.selectedItem, interventions, reference);\n    if (response)\n      this.props.history.push('/main/cid/', {name:'CIDs'});\n  }\n\n  render() {\n    const { name, description, symptoms, causes, interventions, reference, changeValue } = this.props;\n    return (\n      <FormCID \n          title={'Criar CID'}\n          name={name}\n          description={description}\n          symptoms={symptoms}\n          causes={causes}\n          interventions={interventions} \n          reference={reference}\n          changeValue={changeValue}\n          submit={this.handleSubmit}\n          back={() => this.props.history.goBack()}\n        />\n    );\n  }\n}\n\nconst reducer = 'createCID';\nconst mapStateToProps = state => ({\n  force: state,\n  name : state[reducer].get('name'),\n  description : state[reducer].get('description'),\n  symptoms : {\n    selectedItem : state[reducer].get('symptomsSelectedItem'),\n    inputValue : state[reducer].get('symptomsInputValue'),\n    suggestions : state[reducer].get('symptomsSuggestions')\n  },\n  causes : {\n    selectedItem : state[reducer].get('causesSelectedItem'),\n    inputValue : state[reducer].get('causesInputValue'),\n    suggestions : state[reducer].get('causesSuggestions')\n  },\n  interventions : state[reducer].get('interventions'),\n  reference : state[reducer].get('reference')\n})\n\nconst mapDispatchToProps = dispatch => ({\n  changeValue : bindActionCreators(changeValueTEXT, dispatch),\n  save : bindActionCreators(saveCID, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps )(createCID);\n"],"sourceRoot":""}